#!/usr/bin/env bash
# usage: bin/compile <build_dir> <cache_dir> <env_dir>

#set -o errexit
#set -o pipefail

#if [ -n "${BUILDPACK_DEBUG}" ]; then
#    set -o xtrace
#fi

build_dir="${1:-}"
cache_dir="${2:-}"
# env_dir="${3:-}"
base_dir="$( cd -P "$( dirname "${0}" )" && pwd )"
buildpack_dir="$( readlink -f "${base_dir}/.." )"
tmp_dir="$( mktemp --tmpdir="/tmp" --directory "grafana-XXXX" )"

readonly build_dir
readonly cache_dir
# readonly env_dir
readonly base_dir
readonly buildpack_dir
readonly tmp_dir

# shellcheck disable=SC1091
source "${buildpack_dir}/bin/fn.sh"
# shellcheck disable=SC1091
source "${buildpack_dir}/VERSIONS"


sc::_::start


sc::_::step_start "Installing Grafana"

## Version

version="${GRAFANA_VERSION:-"${GRAFANA_DEFAULT_VERSION}"}"
readonly version

if [ -z "${version}" ]; then
    sc::_::err "Could not retrieve Grafana version."
    sc::_::info "Please use the GRAFANA_VERSION environment variable to specify the version to use."
    exit
fi

sc::_::info "Using Grafana version ${version}."


## Retrieving package

dist="grafana-${version}.tar.gz"
cache_file="${cache_dir}/${dist}"
package_url="https://dl.grafana.com/oss/release/grafana-${version}.linux-amd64.tar.gz"
checksum_url="${package_url}.sha256"

readonly dist
readonly cache_file
readonly package_url
readonly checksum_url

mkdir --parents "${tmp_dir}"

if [ -f "${cache_file}" ]; then
    sc::_::info "Found file in cache."

    sc::_::task_start "Checking validity"

    if ! sc::_::check_cached_file "${cache_file}" "${checksum_url}"; then
        sc::_::task_fail "File in cache is invalid, it has been removed."
    else
        sc::_::task_finish
    fi
fi

if [ ! -f "${cache_file}" ]; then
    sc::_::task_start "Downloading"

    if ! sc::_::download "${package_url}" "${checksum_url}" "${cache_file}"; then
        sc::_::task_fail "An error occured while downloading. Aborting."
        exit
    fi

    sc::_::task_finish
fi

## Extracting

sc::_::task_start "Extracting"

if ! tar \
    --extract \
    --file="${cache_file}" \
    --directory="${tmp_dir}" \
    2>/dev/null
then
    sc::_::task_fail "An error occured while extracting the archive. Aborting."
    exit
fi

sc::_::task_finish

## Installing

sc::_::task_start "Installing"

if ! mv "${tmp_dir}/grafana-v${version}/"* --target-directory="${build_dir}" 2>/dev/null; then
    sc::_::task_fail "An error occured while installing the files. Aborting."
    exit
fi

sc::_::task_finish

sc::_::step_finish



sc::_::step_start "Building Environment"

export PATH="${build_dir}/bin:${PATH}"

mkdir --parents "${build_dir}/.profile.d"

cat << EOF > "${build_dir}/.profile.d/050-grafana.sh"
export PATH="\${PATH}:\${HOME}/bin"
EOF

sc::_::step_finish



sc::_::step_start "Installing Plugins"

if [ ! -e "${GRAFANA_PLUGINS}" ]; then
    OLD_IFS=${IFS}
    IFS=','

    plugin_dir="${build_dir}/plugins"
    mkdir --parents "${plugin_dir}"

    for plugin in ${GRAFANA_PLUGINS}; do
        sc::_::task_start "Installing ${plugin}"

        if ! "${build_dir}/bin/grafana" cli \
                            --pluginsDir="${plugin_dir}" \
                            plugins install "${plugin}" >/dev/null
        then
            sc::_::task_fail "An error occured while installing plugin ""${plugin}"". Going on."
        else
            sc::_::task_finish
        fi
    done

    IFS=${OLD_IFS}
fi

sc::_::step_finish



sc::_::step_start "Cleaning up"

sc::_::task_start "Removing temporary files"

if ! rm --recursive --force "${tmp_dir}"; then
    sc::_::task_fail
    exit
fi

sc::_::task_finish

sc::_::step_finish


sc::_::finish
